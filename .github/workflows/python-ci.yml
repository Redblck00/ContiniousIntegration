name: Python CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, 3.10]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Run tests with pytest
        run: |
          pytest --cov=./ --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella

  lint:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.10

      - name: Install linting tools
        run: |
          pip install flake8 black

      - name: Check code formatting with Black
        run: |
          black --check .

      - name: Check code style with Flake8
        run: |
          flake8 .

name: Python CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # test run on

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, 3.10]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Run tests
        run: pytest

 notify-on-failure:
    runs-on: ubuntu-latest
    needs: test
    if: always() && (needs.test.result == 'failure' || needs.test.result == 'cancelled')
    steps:
      - name: Send email notification on failure
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: CI/CD Туршилт амжилтгүй боллоо
          to: баг@company.com
          from: CI/CD System
          body: |
            CI/CD туршилт амжилтгүй боллоо!

             Repository: ${{ github.repository }}
             Workflow: ${{ github.workflow }}
             Ажил: ${{ github.job }}
             Дэлгэрэнгүй: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
             Шалтгаан: ${{ needs.test.result }}
  notify-on-success:
    runs-on: ubuntu-latest
    needs: test
    if: always() && needs.test.result == 'success'
    steps:
      - name: Send success notification to Slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          channel: '#ci-cd-notifications'
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}


